name: SonarQube Scan

on:
  push:
    branches:
      - master  # or your default branch
  pull_request:
    branches:
      - master # or your default branch

jobs:
  sonarqube:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'  # Replace with your .NET Core version

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: C:\Users\runneradmin\.sonar\cache
          key: ${{ runner.os }}-sonar

      - name: Run SonarQube Begin
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          $env:PATH += ";C:\Users\runneradmin\.dotnet\tools"
          dotnet sonarscanner begin /k:"your_project_key" /d:sonar.host.url="http://your_sonarqube_server_url" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          if ($?) { Write-Host 'SonarQube begin succeeded' } else { Write-Error 'SonarQube begin failed' }

      - name: Build Project
        run: dotnet build

      - name: List .sonarqube Directory
        run: |
          if (Test-Path -Path ".sonarqube") {
            Get-ChildItem -Path .sonarqube -Recurse | Write-Host
          } else {
            Write-Host ".sonarqube directory does not exist"
          }

      - name: List .sonarqube/conf Directory
        run: |
          if (Test-Path -Path ".sonarqube\conf") {
            Get-ChildItem -Path .sonarqube\conf | Write-Host
          } else {
            Write-Host ".sonarqube\conf directory does not exist"
          }

      - name: Run SonarQube End
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
